name: Build Cork Windows (MSBuild)

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        ref: master
        
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2
      
    - name: Install vcpkg and MPIR
      run: |
        git clone https://github.com/Microsoft/vcpkg.git
        cd vcpkg
        .\bootstrap-vcpkg.bat
        .\vcpkg install mpir:x64-windows
        
    - name: Find Cork Solution Files (exclude vcpkg)
      run: |
        echo "Looking for .sln files (excluding vcpkg):"
        Get-ChildItem -Recurse -Filter "*.sln" | Where-Object { $_.FullName -notlike "*vcpkg*" }
        echo "Looking for .vcxproj files (excluding vcpkg):"
        Get-ChildItem -Recurse -Filter "*.vcxproj" | Where-Object { $_.FullName -notlike "*vcpkg*" }
        
    - name: Build Cork with MSBuild (Main Library Only)
      run: |
        echo "Looking for main Cork projects (excluding test projects)"
        $projFiles = Get-ChildItem -Recurse -Filter "*.vcxproj" | Where-Object { 
          $_.FullName -notlike "*vcpkg*" -and 
          $_.FullName -notlike "*test*" -and 
          $_.FullName -notlike "*Test*" -and
          $_.FullName -notlike "*catch*"
        }
        
        if ($projFiles) {
          foreach ($proj in $projFiles) {
            echo "Building Cork project: $($proj.FullName)"
            try {
              msbuild $proj.FullName /p:Configuration=Release /p:Platform=x64
            } catch {
              echo "Failed to build $($proj.FullName), continuing..."
            }
          }
        } else {
          echo "No Cork projects found, trying all non-vcpkg projects"
          $allProj = Get-ChildItem -Recurse -Filter "*.vcxproj" | Where-Object { $_.FullName -notlike "*vcpkg*" }
          foreach ($proj in $allProj) {
            echo "Trying to build: $($proj.FullName)"
            msbuild $proj.FullName /p:Configuration=Release /p:Platform=x64 /p:EnableUnitTestProject=false
          }
        }
        
    - name: List build outputs
      run: |
        echo "Looking for .exe files:"
        Get-ChildItem -Recurse -Filter "*.exe"
        echo "Looking for .dll files:"
        Get-ChildItem -Recurse -Filter "*.dll"
        
    - name: Upload Cork executable
      uses: actions/upload-artifact@v4
      with:
        name: Cork-Windows-x64
        path: |
          **/*.exe
          **/*.dll
      continue-on-error: true
