name: Build Cork Windows (MSBuild)

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        ref: master
        
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2
      
    - name: Install vcpkg and MPIR
      run: |
        git clone https://github.com/Microsoft/vcpkg.git
        cd vcpkg
        .\bootstrap-vcpkg.bat
        .\vcpkg install mpir:x64-windows
        
    - name: Find Solution Files
      run: |
        echo "Looking for .sln files:"
        Get-ChildItem -Recurse -Filter "*.sln"
        echo "Looking for .vcxproj files:"
        Get-ChildItem -Recurse -Filter "*.vcxproj"
        
    - name: Build with MSBuild (if .sln exists)
      run: |
        $slnFiles = Get-ChildItem -Recurse -Filter "*.sln"
        if ($slnFiles) {
          $sln = $slnFiles[0].FullName
          echo "Building: $sln"
          msbuild $sln /p:Configuration=Release /p:Platform=x64 /p:VcpkgRoot="vcpkg"
        } else {
          echo "No .sln file found, trying individual .vcxproj files"
          $projFiles = Get-ChildItem -Recurse -Filter "*.vcxproj"
          foreach ($proj in $projFiles) {
            echo "Building: $($proj.FullName)"
            msbuild $proj.FullName /p:Configuration=Release /p:Platform=x64 /p:VcpkgRoot="vcpkg"
          }
        }
        
    - name: List build outputs
      run: |
        echo "Looking for .exe files:"
        Get-ChildItem -Recurse -Filter "*.exe"
        echo "Looking for .dll files:"
        Get-ChildItem -Recurse -Filter "*.dll"
        
    - name: Upload Cork executable
      uses: actions/upload-artifact@v4
      with:
        name: Cork-Windows-x64
        path: |
          **/*.exe
          **/*.dll
      continue-on-error: true
